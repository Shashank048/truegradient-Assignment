{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { signIn } from \"../features/auth/authSlice\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// export default function SignIn() {\n//   const dispatch = useDispatch();\n//   const { loading } = useSelector((s) => s.auth);\n//   const navigate = useNavigate();\n\n//   const [form, setForm] = useState({ identifier: \"\", password: \"\" });\n//   const [message, setMessage] = useState(\"\");\n//   const [isSuccess, setIsSuccess] = useState(false);\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n\n//     if (!form.identifier || !form.password) {\n//       setIsSuccess(false);\n//       setMessage(\"Please enter your username/email and password\");\n//       return;\n//     }\n\n//     try {\n//       const res = await dispatch(\n//         signIn({\n//           identifier: form.identifier, \n//           password: form.password\n//         })\n//       );\n\n//       if (res.meta.requestStatus === \"fulfilled\") {\n//         setIsSuccess(true);\n//         setMessage(\"Login successful! Redirecting...\");\n//         setTimeout(() => navigate(\"/\"), 1500);\n//       } else {\n//         setIsSuccess(false);\n//         setMessage(res.payload?.message || \"Wrong username or password!\");\n//       }\n//     } catch (err) {\n//       setIsSuccess(false);\n//       setMessage(\"Network error. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <form className=\"auth-card\" onSubmit={submit}>\n//         <div>\n//           <h2>Sign In</h2>\n//           <h5>Enter your credentials to access your account</h5>\n\n//           {message && (\n//             <div className={isSuccess ? \"success\" : \"error\"}>{message}</div>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Username or Email</label>\n//           <input\n//             placeholder=\"Enter your username or email\"\n//             value={form.identifier}\n//             onChange={(e) =>\n//               setForm({ ...form, identifier: e.target.value })\n//             }\n//           />\n//         </div>\n\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={form.password}\n//             onChange={(e) => setForm({ ...form, password: e.target.value })}\n//           />\n//         </div>\n\n//         <button disabled={loading} type=\"submit\">\n//           {loading ? \"Signing In...\" : \"Sign In\"}\n//         </button>\n\n//         <div className=\"muted\">\n//           Don’t have an account? <Link to=\"/signup\">Sign up</Link>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Shashan/Videos/truegradient - 2 Assignment/frontend/src/pages/SignIn.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { signIn } from \"../features/auth/authSlice\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// export default function SignIn() {\r\n//   const dispatch = useDispatch();\r\n//   const { loading } = useSelector((s) => s.auth);\r\n//   const navigate = useNavigate();\r\n\r\n//   const [form, setForm] = useState({ identifier: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n//   const submit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!form.identifier || !form.password) {\r\n//       setIsSuccess(false);\r\n//       setMessage(\"Please enter your username/email and password\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await dispatch(\r\n//         signIn({\r\n//           identifier: form.identifier, \r\n//           password: form.password\r\n//         })\r\n//       );\r\n\r\n//       if (res.meta.requestStatus === \"fulfilled\") {\r\n//         setIsSuccess(true);\r\n//         setMessage(\"Login successful! Redirecting...\");\r\n//         setTimeout(() => navigate(\"/\"), 1500);\r\n//       } else {\r\n//         setIsSuccess(false);\r\n//         setMessage(res.payload?.message || \"Wrong username or password!\");\r\n//       }\r\n//     } catch (err) {\r\n//       setIsSuccess(false);\r\n//       setMessage(\"Network error. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <form className=\"auth-card\" onSubmit={submit}>\r\n//         <div>\r\n//           <h2>Sign In</h2>\r\n//           <h5>Enter your credentials to access your account</h5>\r\n\r\n//           {message && (\r\n//             <div className={isSuccess ? \"success\" : \"error\"}>{message}</div>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Username or Email</label>\r\n//           <input\r\n//             placeholder=\"Enter your username or email\"\r\n//             value={form.identifier}\r\n//             onChange={(e) =>\r\n//               setForm({ ...form, identifier: e.target.value })\r\n//             }\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={form.password}\r\n//             onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <button disabled={loading} type=\"submit\">\r\n//           {loading ? \"Signing In...\" : \"Sign In\"}\r\n//         </button>\r\n\r\n//         <div className=\"muted\">\r\n//           Don’t have an account? <Link to=\"/signup\">Sign up</Link>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}