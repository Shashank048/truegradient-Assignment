{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shashan\\\\Videos\\\\truegradient - 2 Assignment\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from 'react';\n// // // import { useSelector, useDispatch } from 'react-redux';\n// // // import { sendMessage } from '../features/chat/chatSlice';\n\n// // // export default function ChatWindow() {\n// // //   const { messages } = useSelector(s => s.chat);\n// // //   const dispatch = useDispatch();\n// // //   const [text, setText] = useState('');\n\n// // //   const submit = async (e) => {\n// // //     e.preventDefault();\n// // //     if (!text.trim()) return;\n// // //     await dispatch(sendMessage({ text }));\n// // //     setText('');\n// // //   };\n\n// // //   return (\n// // //     <div className=\"chat-window\">\n// // //       <div className=\"messages\">\n// // //         {messages.map((m, i) => (\n// // //           <div key={i} className={`message ${m.from === 'me' ? 'me' : 'them'}`}>\n// // //             <div className=\"text\">{m.text}</div>\n// // //             <div className=\"time\">{new Date(m.createdAt).toLocaleTimeString()}</div>\n// // //           </div>\n// // //         ))}\n// // //       </div>\n// // //       <form className=\"composer\" onSubmit={submit}>\n// // //         <input value={text} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\n// // //         <button type=\"submit\">Send</button>\n// // //       </form>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useState } from 'react';\n// // import \"./ChatWindow.css\"\n\n// // export default function ChatWindow() {\n// //   const [text, setText] = useState('');\n// //   const messages = [\n// //     { text: 'Hello! ðŸ‘‹', from: 'them', createdAt: new Date() },\n// //     { text: 'Hi, how are you?', from: 'me', createdAt: new Date() },\n// //     { text: 'Iâ€™m good, thanks!', from: 'them', createdAt: new Date() }\n// //   ];\n\n// //   const submit = (e) => {\n// //     e.preventDefault();\n// //     if (!text.trim()) return;\n// //     // just frontend â†’ no actual send\n// //     setText('');\n// //   };\n\n// //   return (\n\n// //     <div className=\"chat-window\">\n// //       <div className=\"messages\">\n// //         {messages.map((m, i) => (\n// //           <div key={i} className={`message ${m.from}`}>\n// //             <div className=\"text\">{m.text}</div>\n// //             <div className=\"time\">{m.createdAt.toLocaleTimeString()}</div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //       <form className=\"composer\" onSubmit={submit}>\n// //         <input\n// //           value={text}\n// //           onChange={e => setText(e.target.value)}\n// //           placeholder=\"Type a message...\"\n// //         />\n// //         <button type=\"submit\">Send</button>\n// //       </form>\n// //       <hr/>\n// //       <p className=\"hint\">Press Enter to send, Shift+Enter for new line</p>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import \"./ChatWindow.css\"\n\n// export default function ChatWindow() {\n//   const [text, setText] = useState('');\n//   const messages = [\n//     { text: 'Hello! ðŸ‘‹', from: 'them', createdAt: new Date() },\n//     { text: 'Hi, how are you?', from: 'me', createdAt: new Date() },\n//     { text: 'Iâ€™m good, thanks!', from: 'them', createdAt: new Date() }\n//   ];\n\n//   const submit = (e) => {\n//     e.preventDefault();\n//     if (!text.trim()) return;\n//     setText('');\n//   };\n\n//   return (\n//     <div className=\"chat-window\">\n//       {/* Line at the top */}\n//       <hr className=\"top-line\" />\n\n//       {/* Messages */}\n//       <div className=\"messages\">\n//         {messages.map((m, i) => (\n//           <div key={i} className={`message ${m.from}`}>\n//             <div className=\"text\">{m.text}</div>\n//             <div className=\"time\">{m.createdAt.toLocaleTimeString()}</div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Composer */}\n//       <form className=\"composer\" onSubmit={submit}>\n//         <input\n//           value={text}\n//           onChange={e => setText(e.target.value)}\n//           placeholder=\"Type a message...\"\n//         />\n//         <button type=\"submit\">Send</button>\n//       </form>\n\n//       <p className=\"hint\">Press Enter to send, Shift+Enter for new line</p>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatWindow() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const messages = [{\n    text: \"Hello! ðŸ‘‹\",\n    from: \"them\",\n    createdAt: new Date()\n  }, {\n    text: \"Hi, how are you?\",\n    from: \"me\",\n    createdAt: new Date()\n  }, {\n    text: \"Iâ€™m good, thanks!\",\n    from: \"them\",\n    createdAt: new Date()\n  }];\n  const submit = e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    setText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${m.from}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: m.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: m.createdAt.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"top-divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"composer\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hint\",\n      children: \"Press Enter to send, Shift+Enter for new line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatWindow","_s","text","setText","messages","from","createdAt","Date","submit","e","preventDefault","trim","className","children","map","m","i","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Shashan/Videos/truegradient - 2 Assignment/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["// // // import React, { useState } from 'react';\r\n// // // import { useSelector, useDispatch } from 'react-redux';\r\n// // // import { sendMessage } from '../features/chat/chatSlice';\r\n\r\n// // // export default function ChatWindow() {\r\n// // //   const { messages } = useSelector(s => s.chat);\r\n// // //   const dispatch = useDispatch();\r\n// // //   const [text, setText] = useState('');\r\n\r\n// // //   const submit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     if (!text.trim()) return;\r\n// // //     await dispatch(sendMessage({ text }));\r\n// // //     setText('');\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"chat-window\">\r\n// // //       <div className=\"messages\">\r\n// // //         {messages.map((m, i) => (\r\n// // //           <div key={i} className={`message ${m.from === 'me' ? 'me' : 'them'}`}>\r\n// // //             <div className=\"text\">{m.text}</div>\r\n// // //             <div className=\"time\">{new Date(m.createdAt).toLocaleTimeString()}</div>\r\n// // //           </div>\r\n// // //         ))}\r\n// // //       </div>\r\n// // //       <form className=\"composer\" onSubmit={submit}>\r\n// // //         <input value={text} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\r\n// // //         <button type=\"submit\">Send</button>\r\n// // //       </form>\r\n// // //     </div>\r\n// // //   );\r\n// // // }\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import \"./ChatWindow.css\"\r\n\r\n// // export default function ChatWindow() {\r\n// //   const [text, setText] = useState('');\r\n// //   const messages = [\r\n// //     { text: 'Hello! ðŸ‘‹', from: 'them', createdAt: new Date() },\r\n// //     { text: 'Hi, how are you?', from: 'me', createdAt: new Date() },\r\n// //     { text: 'Iâ€™m good, thanks!', from: 'them', createdAt: new Date() }\r\n// //   ];\r\n\r\n// //   const submit = (e) => {\r\n// //     e.preventDefault();\r\n// //     if (!text.trim()) return;\r\n// //     // just frontend â†’ no actual send\r\n// //     setText('');\r\n// //   };\r\n\r\n// //   return (\r\n   \r\n// //     <div className=\"chat-window\">\r\n// //       <div className=\"messages\">\r\n// //         {messages.map((m, i) => (\r\n// //           <div key={i} className={`message ${m.from}`}>\r\n// //             <div className=\"text\">{m.text}</div>\r\n// //             <div className=\"time\">{m.createdAt.toLocaleTimeString()}</div>\r\n// //           </div>\r\n// //         ))}\r\n// //       </div>\r\n// //       <form className=\"composer\" onSubmit={submit}>\r\n// //         <input\r\n// //           value={text}\r\n// //           onChange={e => setText(e.target.value)}\r\n// //           placeholder=\"Type a message...\"\r\n// //         />\r\n// //         <button type=\"submit\">Send</button>\r\n// //       </form>\r\n// //       <hr/>\r\n// //       <p className=\"hint\">Press Enter to send, Shift+Enter for new line</p>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// import React, { useState } from 'react';\r\n// import \"./ChatWindow.css\"\r\n\r\n// export default function ChatWindow() {\r\n//   const [text, setText] = useState('');\r\n//   const messages = [\r\n//     { text: 'Hello! ðŸ‘‹', from: 'them', createdAt: new Date() },\r\n//     { text: 'Hi, how are you?', from: 'me', createdAt: new Date() },\r\n//     { text: 'Iâ€™m good, thanks!', from: 'them', createdAt: new Date() }\r\n//   ];\r\n\r\n//   const submit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!text.trim()) return;\r\n//     setText('');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chat-window\">\r\n//       {/* Line at the top */}\r\n//       <hr className=\"top-line\" />\r\n\r\n//       {/* Messages */}\r\n//       <div className=\"messages\">\r\n//         {messages.map((m, i) => (\r\n//           <div key={i} className={`message ${m.from}`}>\r\n//             <div className=\"text\">{m.text}</div>\r\n//             <div className=\"time\">{m.createdAt.toLocaleTimeString()}</div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Composer */}\r\n//       <form className=\"composer\" onSubmit={submit}>\r\n//         <input\r\n//           value={text}\r\n//           onChange={e => setText(e.target.value)}\r\n//           placeholder=\"Type a message...\"\r\n//         />\r\n//         <button type=\"submit\">Send</button>\r\n//       </form>\r\n\r\n//       <p className=\"hint\">Press Enter to send, Shift+Enter for new line</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./ChatWindow.css\";\r\n\r\nexport default function ChatWindow() {\r\n  const [text, setText] = useState(\"\");\r\n  const messages = [\r\n    { text: \"Hello! ðŸ‘‹\", from: \"them\", createdAt: new Date() },\r\n    { text: \"Hi, how are you?\", from: \"me\", createdAt: new Date() },\r\n    { text: \"Iâ€™m good, thanks!\", from: \"them\", createdAt: new Date() },\r\n  ];\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) return;\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"chat-window\">\r\n\r\n      <div className=\"messages\">\r\n        {messages.map((m, i) => (\r\n          <div key={i} className={`message ${m.from}`}>\r\n            <div className=\"text\">{m.text}</div>\r\n            <div className=\"time\">{m.createdAt.toLocaleTimeString()}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n       <hr className=\"top-divider\" />\r\n\r\n      <form className=\"composer\" onSubmit={submit}>\r\n        <input\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n\r\n      <p className=\"hint\">Press Enter to send, Shift+Enter for new line</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}