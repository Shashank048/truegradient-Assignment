{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { signUp } from \"../features/auth/authSlice\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// export default function SignUp() {\n//   const dispatch = useDispatch();\n//   const { loading } = useSelector((state) => state.auth);\n//   const navigate = useNavigate();\n\n//   const [form, setForm] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const [message, setMessage] = useState(\"\");\n//   const [isSuccess, setIsSuccess] = useState(false);\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n\n//     if (!form.username || !form.email || !form.password) {\n//       setIsSuccess(false);\n//       setMessage(\"Please fill in all fields\");\n//       return;\n//     }\n\n//     const res = await dispatch(signUp(form));\n//     if (res.meta.requestStatus === \"fulfilled\") {\n//       setIsSuccess(true);\n//       setMessage(\"Sign up completed! Redirecting...\");\n//       setTimeout(() => navigate(\"/signin\"), 1500);\n//     } else {\n//       setIsSuccess(false);\n//       setMessage(\"Something went wrong. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <form className=\"auth-card\" onSubmit={submit}>\n//         <div>\n//           <h2>Sign Up</h2>\n//           <h5>Create an account to get started</h5>\n\n//           {message && (\n//             <div className={isSuccess ? \"success\" : \"error\"}>{message}</div>\n//           )}\n//         </div>\n\n//        <div>\n//   <label htmlFor=\"username\">Username</label>\n//   <input\n//     id=\"username\"\n//     name=\"username\"\n//     placeholder=\"Choose a username\"\n//     value={form.username}\n//     onChange={(e) => setForm({ ...form, username: e.target.value })}\n//   />\n// </div>\n\n// <div>\n//   <label htmlFor=\"email\">Email</label>\n//   <input\n//     type=\"email\"\n//     id=\"email\"\n//     name=\"email\"\n//     placeholder=\"Add email\"\n//     value={form.email}\n//     onChange={(e) => setForm({ ...form, email: e.target.value })}\n//   />\n// </div>\n\n// <div>\n//   <label htmlFor=\"password\">Password</label>\n//   <input\n//     type=\"password\"\n//     id=\"password\"\n//     name=\"password\"\n//     placeholder=\"Create a password\"\n//     value={form.password}\n//     onChange={(e) => setForm({ ...form, password: e.target.value })}\n//   />\n// </div>\n\n//         <button disabled={loading} type=\"submit\">\n//           {loading ? \"Signing Up...\" : \"Sign Up\"}\n//         </button>\n\n//         <div className=\"muted\">\n//           Already have an account? <Link to=\"/signin\">Sign in</Link>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Shashan/Videos/truegradient - 2 Assignment/frontend/src/pages/SignUp.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { signUp } from \"../features/auth/authSlice\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// export default function SignUp() {\r\n//   const dispatch = useDispatch();\r\n//   const { loading } = useSelector((state) => state.auth);\r\n//   const navigate = useNavigate();\r\n\r\n//   const [form, setForm] = useState({\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n//   const submit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!form.username || !form.email || !form.password) {\r\n//       setIsSuccess(false);\r\n//       setMessage(\"Please fill in all fields\");\r\n//       return;\r\n//     }\r\n\r\n//     const res = await dispatch(signUp(form));\r\n//     if (res.meta.requestStatus === \"fulfilled\") {\r\n//       setIsSuccess(true);\r\n//       setMessage(\"Sign up completed! Redirecting...\");\r\n//       setTimeout(() => navigate(\"/signin\"), 1500);\r\n//     } else {\r\n//       setIsSuccess(false);\r\n//       setMessage(\"Something went wrong. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <form className=\"auth-card\" onSubmit={submit}>\r\n//         <div>\r\n//           <h2>Sign Up</h2>\r\n//           <h5>Create an account to get started</h5>\r\n\r\n//           {message && (\r\n//             <div className={isSuccess ? \"success\" : \"error\"}>{message}</div>\r\n//           )}\r\n//         </div>\r\n\r\n//        <div>\r\n//   <label htmlFor=\"username\">Username</label>\r\n//   <input\r\n//     id=\"username\"\r\n//     name=\"username\"\r\n//     placeholder=\"Choose a username\"\r\n//     value={form.username}\r\n//     onChange={(e) => setForm({ ...form, username: e.target.value })}\r\n//   />\r\n// </div>\r\n\r\n// <div>\r\n//   <label htmlFor=\"email\">Email</label>\r\n//   <input\r\n//     type=\"email\"\r\n//     id=\"email\"\r\n//     name=\"email\"\r\n//     placeholder=\"Add email\"\r\n//     value={form.email}\r\n//     onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n//   />\r\n// </div>\r\n\r\n// <div>\r\n//   <label htmlFor=\"password\">Password</label>\r\n//   <input\r\n//     type=\"password\"\r\n//     id=\"password\"\r\n//     name=\"password\"\r\n//     placeholder=\"Create a password\"\r\n//     value={form.password}\r\n//     onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n//   />\r\n// </div>\r\n\r\n\r\n//         <button disabled={loading} type=\"submit\">\r\n//           {loading ? \"Signing Up...\" : \"Sign Up\"}\r\n//         </button>\r\n\r\n//         <div className=\"muted\">\r\n//           Already have an account? <Link to=\"/signin\">Sign in</Link>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}