{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shashan\\\\Videos\\\\truegradient - 2 Assignment\\\\frontend\\\\src\\\\pages\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\n// // // // import React, { useState } from 'react';\n// // // // import { useDispatch, useSelector } from 'react-redux';\n// // // // import { signUp } from '../features/auth/authSlice';\n// // // // import { Link, useNavigate } from 'react-router-dom';\n\n// // // // export default function SignUp() {\n// // // //   const dispatch = useDispatch();\n// // // //   const { loading, error } = useSelector(s => s.auth);\n// // // //   const navigate = useNavigate();\n// // // //   const [form, setForm] = useState({ username: '', password: '' });\n\n// // // //   const submit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     const res = await dispatch(signUp(form));\n// // // //     if (res.meta.requestStatus === 'fulfilled') navigate('/');\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"auth-container\">\n// // // //       <form className=\"auth-card\" onSubmit={submit}>\n// // // //         <h2>Create account</h2>\n// // // //         <input placeholder=\"Username\" value={form.username} onChange={e => setForm({ ...form, username: e.target.value })} />\n// // // //         <input placeholder=\"Password\" type=\"password\" value={form.password} onChange={e => setForm({ ...form, password: e.target.value })} />\n// // // //         <button disabled={loading} type=\"submit\">Sign Up</button>\n// // // //         {error && <div className=\"error\">{error}</div>}\n// // // //         <div className=\"muted\">Already have an account? <Link to=\"/signin\">Sign In</Link></div>\n// // // //       </form>\n// // // //     </div>\n// // // //   );\n// // // // }\n\n// // // import React, { useState } from 'react';\n// // // import { useDispatch, useSelector } from 'react-redux';\n// // // import { signUp } from '../features/auth/authSlice';\n// // // import { Link, useNavigate } from 'react-router-dom';\n\n// // // export default function SignUp() {\n// // //   const dispatch = useDispatch();\n// // //   const { loading, error } = useSelector(s => s.auth);\n// // //   const navigate = useNavigate();\n// // //   const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\n// // //   const [showPassword, setShowPassword] = useState(false);\n// // //   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n// // //   const submit = async (e) => {\n// // //     e.preventDefault();\n// // //     if (form.password !== form.confirmPassword) {\n// // //       alert(\"Passwords do not match!\");\n// // //       return;\n// // //     }\n// // //     const res = await dispatch(signUp(form));\n// // //     if (res.meta.requestStatus === 'fulfilled') navigate('/');\n// // //   };\n\n// // //   return (\n// // //     <div className=\"auth-container\">\n// // //       <form className=\"auth-card\" onSubmit={submit}>\n// // //         <h2>Sign Up <br/>   <h5>Create an account to get started</h5>\n// // //            </h2>\n// // //         <div>\n// // //           <label>Username</label>\n// // //           <input\n// // //             placeholder=\"Choose a username\"\n// // //             value={form.username}\n// // //             onChange={e => setForm({ ...form, username: e.target.value })}\n// // //           />\n// // //         </div>\n\n// // //         {/* Password */}\n// // //         <div>\n// // //           <label>Password</label>\n// // //           <div style={{ position: \"relative\" }}>\n// // //             <input\n// // //               type={showPassword ? \"text\" : \"password\"}\n// // //               placeholder=\"Create a password\"\n// // //               value={form.password}\n// // //               onChange={e => setForm({ ...form, password: e.target.value })}\n// // //             />\n// // //             <span\n// // //               style={{\n// // //                 position: \"absolute\",\n// // //                 right: \"10px\",\n// // //                 top: \"50%\",\n// // //                 transform: \"translateY(-50%)\",\n// // //                 cursor: \"pointer\"\n// // //               }}\n// // //               onClick={() => setShowPassword(!showPassword)}\n// // //             >\n\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {/* Confirm Password */}\n// // //         <div>\n// // //           <label>Confirm Password</label>\n// // //           <div style={{ position: \"relative\" }}>\n// // //             <input\n// // //               type={showConfirmPassword ? \"text\" : \"password\"}\n// // //               placeholder=\"Confirm your password\"\n// // //               value={form.confirmPassword}\n// // //               onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\n// // //             />\n// // //             <span\n// // //               style={{\n// // //                 position: \"absolute\",\n// // //                 right: \"10px\",\n// // //                 top: \"50%\",\n// // //                 transform: \"translateY(-50%)\",\n// // //                 cursor: \"pointer\"\n// // //               }}\n// // //               onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n// // //             >\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {/* Submit */}\n// // //         <button disabled={loading} type=\"submit\">\n// // //           {loading ? \"Signing Up...\" : \"Sign Up\"}\n// // //         </button>\n\n// // //         {/* Error */}\n// // //         {error && <div className=\"error\">{error}</div>}\n\n// // //         {/* Switch to Sign In */}\n// // //         <div className=\"muted\">\n// // //           Already have an account? <Link to=\"/signin\">Sign in</Link>\n// // //         </div>\n// // //       </form>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useState } from 'react';\n// // import { useDispatch, useSelector } from 'react-redux';\n// // import { signUp } from '../features/auth/authSlice';\n// // import { Link, useNavigate } from 'react-router-dom';\n\n// // export default function SignUp() {\n// //   const dispatch = useDispatch();\n// //   const { loading, error } = useSelector(s => s.auth);\n// //   const navigate = useNavigate();\n// //   const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\n\n// //   const submit = async (e) => {\n// //     e.preventDefault();\n\n// //     if (!form.username || !form.password || !form.confirmPassword) {\n// //       alert(\"Please enter username and password\");\n// //       return;\n// //     }\n\n// //     if (form.password !== form.confirmPassword) {\n// //       alert(\"Passwords do not match!\");\n// //       return;\n// //     }\n\n// //     const res = await dispatch(signUp(form));\n// //     if (res.meta.requestStatus === 'fulfilled') {\n// //       alert(\"Sign up completed!\");\n// //       navigate('/signin');\n// //     } else {\n// //       alert(\"Something went wrong. Please try again.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"auth-container\">\n// //       <form className=\"auth-card\" onSubmit={submit}>\n// //         <h2>Sign Up<br/>  <h5>Create an account to get started</h5></h2>\n\n// //         <div>\n// //           <label>Username</label>\n// //           <input\n// //             placeholder=\"Choose a username\"\n// //             value={form.username}\n// //             onChange={e => setForm({ ...form, username: e.target.value })}\n// //           />\n// //         </div>\n\n// //         <div>\n// //           <label>Password</label>\n// //           <input\n// //             type=\"password\"\n// //             placeholder=\"Create a password\"\n// //             value={form.password}\n// //             onChange={e => setForm({ ...form, password: e.target.value })}\n// //           />\n// //         </div>\n\n// //         <div>\n// //           <label>Confirm Password</label>\n// //           <input\n// //             type=\"password\"\n// //             placeholder=\"Confirm your password\"\n// //             value={form.confirmPassword}\n// //             onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\n// //           />\n// //         </div>\n\n// //         <button disabled={loading} type=\"submit\">\n// //           {loading ? \"Signing Up...\" : \"Sign Up\"}\n// //         </button>\n\n// //         {error && <div className=\"error\">{error}</div>}\n\n// //         <div className=\"muted\">\n// //           Already have an account? <Link to=\"/signin\">Sign in</Link>\n// //         </div>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { signUp } from '../features/auth/authSlice';\n// import { Link, useNavigate } from 'react-router-dom';\n\n// export default function SignUp() {\n//   const dispatch = useDispatch();\n//   const { loading } = useSelector(s => s.auth);\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\n//   const [message, setMessage] = useState(\"\");\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n\n//     if (!form.username || !form.password || !form.confirmPassword) {\n//       setMessage(\"Please enter username and password\");\n//       return;\n//     }\n\n//     if (form.password !== form.confirmPassword) {\n//       setMessage(\"Passwords do not match!\");\n//       return;\n//     }\n\n//     const res = await dispatch(signUp(form));\n//     if (res.meta.requestStatus === 'fulfilled') {\n//       setMessage(\"✅ Sign up completed! Redirecting...\");\n//       setTimeout(() => navigate('/signin'), 1500);\n//     } else {\n//       setMessage(\"❌ Something went wrong. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <form className=\"auth-card\" onSubmit={submit}>\n//         <div>\n//         <h2>Sign Up</h2>\n//         <h5>Create an account to get started</h5>\n\n//         <div>\n//           <label>Username</label>\n//           <input\n//             placeholder=\"Choose a username\"\n//             value={form.username}\n//             onChange={e => setForm({ ...form, username: e.target.value })}\n//           />\n//         </div>\n\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Create a password\"\n//             value={form.password}\n//             onChange={e => setForm({ ...form, password: e.target.value })}\n//           />\n//         </div>\n\n//         <div>\n//           <label>Confirm Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Confirm your password\"\n//             value={form.confirmPassword}\n//             onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\n//           />\n//         </div>\n\n//         <button disabled={loading} type=\"submit\">\n//           {loading ? \"Signing Up...\" : \"Sign Up\"}\n//         </button>\n\n//         {message && <div className=\"error\">{message}</div>}\n\n//         <div className=\"muted\">\n//           Already have an account? <Link to=\"/signin\">Sign in</Link>\n//         </div>\n//          </div>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUp } from '../features/auth/authSlice';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading\n  } = useSelector(s => s.auth);\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const submit = async e => {\n    e.preventDefault();\n    if (!form.username || !form.password || !form.confirmPassword) {\n      setIsSuccess(false);\n      setMessage(\"Please enter username and password\");\n      return;\n    }\n    if (form.password !== form.confirmPassword) {\n      setIsSuccess(false);\n      setMessage(\"Passwords do not match!\");\n      return;\n    }\n    const res = await dispatch(signUp(form));\n    if (res.meta.requestStatus === 'fulfilled') {\n      setIsSuccess(true);\n      setMessage(\"Sign up completed! Redirecting...\");\n      setTimeout(() => navigate('/signin'), 1500);\n    } else {\n      setIsSuccess(false);\n      setMessage(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-card\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Create an account to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isSuccess ? \"success\" : \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Choose a username\",\n          value: form.username,\n          onChange: e => setForm({\n            ...form,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Create a password\",\n          value: form.password,\n          onChange: e => setForm({\n            ...form,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm your password\",\n          value: form.confirmPassword,\n          onChange: e => setForm({\n            ...form,\n            confirmPassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        type: \"submit\",\n        children: loading ? \"Signing Up...\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"muted\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"82uNV3fGMivnUWA5iH58j4A79e8=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","signUp","Link","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","dispatch","loading","s","auth","navigate","form","setForm","username","password","confirmPassword","message","setMessage","isSuccess","setIsSuccess","submit","e","preventDefault","res","meta","requestStatus","setTimeout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","type","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/Shashan/Videos/truegradient - 2 Assignment/frontend/src/pages/SignUp.jsx"],"sourcesContent":["// // // // import React, { useState } from 'react';\r\n// // // // import { useDispatch, useSelector } from 'react-redux';\r\n// // // // import { signUp } from '../features/auth/authSlice';\r\n// // // // import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// // // // export default function SignUp() {\r\n// // // //   const dispatch = useDispatch();\r\n// // // //   const { loading, error } = useSelector(s => s.auth);\r\n// // // //   const navigate = useNavigate();\r\n// // // //   const [form, setForm] = useState({ username: '', password: '' });\r\n\r\n// // // //   const submit = async (e) => {\r\n// // // //     e.preventDefault();\r\n// // // //     const res = await dispatch(signUp(form));\r\n// // // //     if (res.meta.requestStatus === 'fulfilled') navigate('/');\r\n// // // //   };\r\n\r\n// // // //   return (\r\n// // // //     <div className=\"auth-container\">\r\n// // // //       <form className=\"auth-card\" onSubmit={submit}>\r\n// // // //         <h2>Create account</h2>\r\n// // // //         <input placeholder=\"Username\" value={form.username} onChange={e => setForm({ ...form, username: e.target.value })} />\r\n// // // //         <input placeholder=\"Password\" type=\"password\" value={form.password} onChange={e => setForm({ ...form, password: e.target.value })} />\r\n// // // //         <button disabled={loading} type=\"submit\">Sign Up</button>\r\n// // // //         {error && <div className=\"error\">{error}</div>}\r\n// // // //         <div className=\"muted\">Already have an account? <Link to=\"/signin\">Sign In</Link></div>\r\n// // // //       </form>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // }\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import { useDispatch, useSelector } from 'react-redux';\r\n// // // import { signUp } from '../features/auth/authSlice';\r\n// // // import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// // // export default function SignUp() {\r\n// // //   const dispatch = useDispatch();\r\n// // //   const { loading, error } = useSelector(s => s.auth);\r\n// // //   const navigate = useNavigate();\r\n// // //   const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\r\n// // //   const [showPassword, setShowPassword] = useState(false);\r\n// // //   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n// // //   const submit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     if (form.password !== form.confirmPassword) {\r\n// // //       alert(\"Passwords do not match!\");\r\n// // //       return;\r\n// // //     }\r\n// // //     const res = await dispatch(signUp(form));\r\n// // //     if (res.meta.requestStatus === 'fulfilled') navigate('/');\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"auth-container\">\r\n// // //       <form className=\"auth-card\" onSubmit={submit}>\r\n// // //         <h2>Sign Up <br/>   <h5>Create an account to get started</h5>\r\n// // //            </h2>\r\n// // //         <div>\r\n// // //           <label>Username</label>\r\n// // //           <input\r\n// // //             placeholder=\"Choose a username\"\r\n// // //             value={form.username}\r\n// // //             onChange={e => setForm({ ...form, username: e.target.value })}\r\n// // //           />\r\n// // //         </div>\r\n\r\n// // //         {/* Password */}\r\n// // //         <div>\r\n// // //           <label>Password</label>\r\n// // //           <div style={{ position: \"relative\" }}>\r\n// // //             <input\r\n// // //               type={showPassword ? \"text\" : \"password\"}\r\n// // //               placeholder=\"Create a password\"\r\n// // //               value={form.password}\r\n// // //               onChange={e => setForm({ ...form, password: e.target.value })}\r\n// // //             />\r\n// // //             <span\r\n// // //               style={{\r\n// // //                 position: \"absolute\",\r\n// // //                 right: \"10px\",\r\n// // //                 top: \"50%\",\r\n// // //                 transform: \"translateY(-50%)\",\r\n// // //                 cursor: \"pointer\"\r\n// // //               }}\r\n// // //               onClick={() => setShowPassword(!showPassword)}\r\n// // //             >\r\n           \r\n// // //             </span>\r\n// // //           </div>\r\n// // //         </div>\r\n\r\n// // //         {/* Confirm Password */}\r\n// // //         <div>\r\n// // //           <label>Confirm Password</label>\r\n// // //           <div style={{ position: \"relative\" }}>\r\n// // //             <input\r\n// // //               type={showConfirmPassword ? \"text\" : \"password\"}\r\n// // //               placeholder=\"Confirm your password\"\r\n// // //               value={form.confirmPassword}\r\n// // //               onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\r\n// // //             />\r\n// // //             <span\r\n// // //               style={{\r\n// // //                 position: \"absolute\",\r\n// // //                 right: \"10px\",\r\n// // //                 top: \"50%\",\r\n// // //                 transform: \"translateY(-50%)\",\r\n// // //                 cursor: \"pointer\"\r\n// // //               }}\r\n// // //               onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n// // //             >\r\n// // //             </span>\r\n// // //           </div>\r\n// // //         </div>\r\n\r\n// // //         {/* Submit */}\r\n// // //         <button disabled={loading} type=\"submit\">\r\n// // //           {loading ? \"Signing Up...\" : \"Sign Up\"}\r\n// // //         </button>\r\n\r\n// // //         {/* Error */}\r\n// // //         {error && <div className=\"error\">{error}</div>}\r\n\r\n// // //         {/* Switch to Sign In */}\r\n// // //         <div className=\"muted\">\r\n// // //           Already have an account? <Link to=\"/signin\">Sign in</Link>\r\n// // //         </div>\r\n// // //       </form>\r\n// // //     </div>\r\n// // //   );\r\n// // // }\r\n\r\n// // import React, { useState } from 'react';\r\n// // import { useDispatch, useSelector } from 'react-redux';\r\n// // import { signUp } from '../features/auth/authSlice';\r\n// // import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// // export default function SignUp() {\r\n// //   const dispatch = useDispatch();\r\n// //   const { loading, error } = useSelector(s => s.auth);\r\n// //   const navigate = useNavigate();\r\n// //   const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\r\n\r\n// //   const submit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     if (!form.username || !form.password || !form.confirmPassword) {\r\n// //       alert(\"Please enter username and password\");\r\n// //       return;\r\n// //     }\r\n\r\n// //     if (form.password !== form.confirmPassword) {\r\n// //       alert(\"Passwords do not match!\");\r\n// //       return;\r\n// //     }\r\n\r\n// //     const res = await dispatch(signUp(form));\r\n// //     if (res.meta.requestStatus === 'fulfilled') {\r\n// //       alert(\"Sign up completed!\");\r\n// //       navigate('/signin');\r\n// //     } else {\r\n// //       alert(\"Something went wrong. Please try again.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"auth-container\">\r\n// //       <form className=\"auth-card\" onSubmit={submit}>\r\n// //         <h2>Sign Up<br/>  <h5>Create an account to get started</h5></h2>\r\n\r\n// //         <div>\r\n// //           <label>Username</label>\r\n// //           <input\r\n// //             placeholder=\"Choose a username\"\r\n// //             value={form.username}\r\n// //             onChange={e => setForm({ ...form, username: e.target.value })}\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div>\r\n// //           <label>Password</label>\r\n// //           <input\r\n// //             type=\"password\"\r\n// //             placeholder=\"Create a password\"\r\n// //             value={form.password}\r\n// //             onChange={e => setForm({ ...form, password: e.target.value })}\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div>\r\n// //           <label>Confirm Password</label>\r\n// //           <input\r\n// //             type=\"password\"\r\n// //             placeholder=\"Confirm your password\"\r\n// //             value={form.confirmPassword}\r\n// //             onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <button disabled={loading} type=\"submit\">\r\n// //           {loading ? \"Signing Up...\" : \"Sign Up\"}\r\n// //         </button>\r\n\r\n// //         {error && <div className=\"error\">{error}</div>}\r\n\r\n// //         <div className=\"muted\">\r\n// //           Already have an account? <Link to=\"/signin\">Sign in</Link>\r\n// //         </div>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { signUp } from '../features/auth/authSlice';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// export default function SignUp() {\r\n//   const dispatch = useDispatch();\r\n//   const { loading } = useSelector(s => s.auth);\r\n//   const navigate = useNavigate();\r\n//   const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const submit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!form.username || !form.password || !form.confirmPassword) {\r\n//       setMessage(\"Please enter username and password\");\r\n//       return;\r\n//     }\r\n\r\n//     if (form.password !== form.confirmPassword) {\r\n//       setMessage(\"Passwords do not match!\");\r\n//       return;\r\n//     }\r\n\r\n//     const res = await dispatch(signUp(form));\r\n//     if (res.meta.requestStatus === 'fulfilled') {\r\n//       setMessage(\"✅ Sign up completed! Redirecting...\");\r\n//       setTimeout(() => navigate('/signin'), 1500);\r\n//     } else {\r\n//       setMessage(\"❌ Something went wrong. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <form className=\"auth-card\" onSubmit={submit}>\r\n//         <div>\r\n//         <h2>Sign Up</h2>\r\n//         <h5>Create an account to get started</h5>\r\n       \r\n\r\n//         <div>\r\n//           <label>Username</label>\r\n//           <input\r\n//             placeholder=\"Choose a username\"\r\n//             value={form.username}\r\n//             onChange={e => setForm({ ...form, username: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Create a password\"\r\n//             value={form.password}\r\n//             onChange={e => setForm({ ...form, password: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Confirm Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Confirm your password\"\r\n//             value={form.confirmPassword}\r\n//             onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <button disabled={loading} type=\"submit\">\r\n//           {loading ? \"Signing Up...\" : \"Sign Up\"}\r\n//         </button>\r\n\r\n//         {message && <div className=\"error\">{message}</div>}\r\n\r\n//         <div className=\"muted\">\r\n//           Already have an account? <Link to=\"/signin\">Sign in</Link>\r\n//         </div>\r\n//          </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUp } from '../features/auth/authSlice';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nexport default function SignUp() {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector(s => s.auth);\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({ username: '', password: '', confirmPassword: '' });\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!form.username || !form.password || !form.confirmPassword) {\r\n      setIsSuccess(false);\r\n      setMessage(\"Please enter username and password\");\r\n      return;\r\n    }\r\n\r\n    if (form.password !== form.confirmPassword) {\r\n      setIsSuccess(false);\r\n      setMessage(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    const res = await dispatch(signUp(form));\r\n    if (res.meta.requestStatus === 'fulfilled') {\r\n      setIsSuccess(true);\r\n      setMessage(\"Sign up completed! Redirecting...\");\r\n      setTimeout(() => navigate('/signin'), 1500);\r\n    } else {\r\n      setIsSuccess(false);\r\n      setMessage(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form className=\"auth-card\" onSubmit={submit}>\r\n        <div>\r\n        <h2>Sign Up</h2>\r\n        <h5>Create an account to get started</h5>\r\n\r\n        {message && (\r\n          <div className={isSuccess ? \"success\" : \"error\"}>{message}</div>\r\n        )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Username</label>\r\n          <input\r\n            placeholder=\"Choose a username\"\r\n            value={form.username}\r\n            onChange={e => setForm({ ...form, username: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Create a password\"\r\n            value={form.password}\r\n            onChange={e => setForm({ ...form, password: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm your password\"\r\n            value={form.confirmPassword}\r\n            onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <button disabled={loading} type=\"submit\">\r\n          {loading ? \"Signing Up...\" : \"Sign Up\"}\r\n        </button>\r\n\r\n        <div className=\"muted\">\r\n          Already have an account? <Link to=\"/signin\">Sign in</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}